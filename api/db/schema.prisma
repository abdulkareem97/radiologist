// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:

model ReferDoctor {
  id         Int      @id @default(autoincrement())
  name       String
  phoneno    String
  hname      String
  haddress   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  extra      Json?
  Record     Record[]
}

model Investigation {
  id         Int      @id @default(autoincrement())
  name       String
  amount     Float
  perc       Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  extra      Json?
}

model Patient {
  id         Int      @id @default(autoincrement())
  name       String
  age        Int
  phone_no   String?
  gender     String?
  address    String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  extra      Json?
  Record     Record[]
}

model Record {
  id            Int         @id @default(autoincrement())
  patient       Patient     @relation(fields: [patientId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  referDr       ReferDoctor @relation(fields: [referDoctorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  info          Json
  status        String
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  extra         Json?
  patientId     Int
  referDoctorId Int
}

model User {
  id                  Int       @id @default(autoincrement())
  name                String?
  email               String    @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  roles               String
  permissions         Json?
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  extra               Json?
}
